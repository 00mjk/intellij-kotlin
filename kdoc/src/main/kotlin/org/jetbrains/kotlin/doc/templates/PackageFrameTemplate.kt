package org.jetbrains.kotlin.doc.templates

import std.*
import org.jetbrains.kotlin.template.*
import std.io.*
import std.util.*
import java.util.*
import org.jetbrains.kotlin.model.KModel
import org.jetbrains.kotlin.model.KPackage

class PackageFrameTemplate(val model: KModel, val pkg: KPackage) : TextTemplate() {
    override fun render() {
        // TODO could really do with templates in multi-line strings :)
        println("""<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>""")
        println("<!-- Generated by kdoc (${model.version}) on ${Date()} -->")
        println("""<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<TITLE>""")
        println("${pkg.name} (${model.title})")
        println("""</TITLE>

<META NAME="date" CONTENT="2012-01-09">""")
println("<LINK REL =\"stylesheet\" TYPE=\"text/css\" HREF=\"${pkg.nameAsRelativePath}/stylesheet.css\" TITLE=\"Style\">")
println("""
</HEAD>

<BODY BGCOLOR="white">
<FONT size="+1" CLASS="FrameTitleFont">""")
        println("<A HREF=\"${pkg.nameAsRelativePath}/${pkg.nameAsPath}/package-summary.html\" target=\"classFrame\">${pkg.name}</A></FONT>")

        printClasses("interface", "Interfaces")
        printClasses("class", "Classes")
        printClasses("enum", "Enums")
        printClasses("annotation", "Annotations")
        printClasses("exception", "Exceptions")

        println("""</BODY>
</HTML>""")
    }

    protected fun printClasses(kind: String, description: String): Unit {
        val classes = pkg.classes.filter{ it.kind == kind }
        if (! classes.isEmpty()) {
            println("""<TABLE BORDER="0" WIDTH="100%" SUMMARY="">
<TR>
<TD NOWRAP><FONT size="+1" CLASS="FrameHeadingFont">""")
            print(description)
            println("""</FONT>&nbsp;
<FONT CLASS="FrameItemFont">
<BR>""")
            for (c in classes) {
                val formatted = if (kind == "interface") "<I>${c.simpleName}</I>" else c.simpleName
                println("<A HREF=\"${c.simpleName}\" title=\"$kind in ${pkg.name}\" target=\"classFrame\">$formatted</A>")
                println("<BR>")
            }
            println("""</TR>
</TABLE>""")
        }

    }
}
