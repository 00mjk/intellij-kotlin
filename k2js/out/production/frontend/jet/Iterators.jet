package.jet

trait Iterator<out T> {
  fun next()  : T
  val hasNext : Boolean
}

abstract open class ByteIterator() : Iterator<Byte> {
  abstract open fun nextByte() : Byte

  override fun next() : Byte
}

abstract open class ShortIterator() : Iterator<Short> {
  abstract open fun nextShort() : Short

  override fun next() : Short
}

abstract open class CharIterator() : Iterator<Char> {
  abstract open fun nextChar()  : Char

  override fun next() : Char
}

abstract open class IntIterator() : Iterator<Int> {
  abstract open fun nextInt()  : Int

  override fun next() : Int
}

abstract open class LongIterator() : Iterator<Long> {
  abstract open fun nextLong()  : Long

  override fun next() : Long
}

abstract open class FloatIterator() : Iterator<Float> {
  abstract open fun nextFloat()  : Float

  override fun next() : Float
}

abstract open class DoubleIterator() : Iterator<Double> {
  abstract open fun nextDouble()  : Double

  override fun next() : Double
}

abstract open class BooleanIterator() : Iterator<Boolean> {
  abstract open fun nextBoolean()  : Boolean

  override fun next() : Boolean
}

fun <T> Iterator<T>.iterator() : Iterator<T>

fun ByteIterator.iterator() : ByteIterator

fun ShortIterator.iterator() : ShortIterator

fun CharIterator.iterator() : CharIterator

fun IntIterator.iterator() : IntIterator

fun BooleanIterator.iterator() : BooleanIterator

fun DoubleIterator.iterator() : DoubleIterator

fun FloatIterator.iterator() : FloatIterator

fun LongIterator.iterator() : LongIterator

