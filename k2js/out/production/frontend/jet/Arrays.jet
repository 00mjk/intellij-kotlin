package jet

fun Array<T>(val size : Int) : Array<T?>

class Array<T>(val size : Int, init : (Int) -> T) {
  fun get(index : Int) : T
  fun set(index : Int, value : T) : Unit

  fun iterator() : Iterator<T>

  val indices : IntRange
}

class ByteArray(val size : Int) {
  fun get(index : Int) : Byte
  fun set(index : Int, value : Byte) : Unit

  fun iterator() : ByteIterator

  val indices : IntRange
}

class ShortArray(val size : Int) {
  fun get(index : Int) : Short
  fun set(index : Int, value : Short) : Unit

  fun iterator() : ShortIterator

  val indices : IntRange
}

class IntArray(val size : Int) {
  fun get(index : Int) : Int
  fun set(index : Int, value : Int) : Unit

  fun iterator() : IntIterator

  val indices : IntRange
}

class LongArray(val size : Int) {
  fun get(index : Int) : Long
  fun set(index : Int, value : Long) : Unit

  fun iterator() : LongIterator

  val indices : IntRange
}

class FloatArray(val size : Int) {
  fun get(index : Int) : Float
  fun set(index : Int, value : Float) : Unit

  fun iterator() : FloatIterator

  val indices : IntRange
}

class DoubleArray(val size : Int) {
  fun get(index : Int) : Double
  fun set(index : Int, value : Double) : Unit

  fun iterator() : DoubleIterator

  val indices : IntRange
}

class CharArray(val size : Int) {
  fun get(index : Int) : Char
  fun set(index : Int, value : Char) : Unit

  fun iterator() : CharIterator

  val indices : IntRange
}

class BooleanArray(val size : Int) {
  fun get(index : Int) : Boolean
  fun set(index : Int, value : Boolean) : Unit

  fun iterator() : BooleanIterator

  val indices : IntRange
}
