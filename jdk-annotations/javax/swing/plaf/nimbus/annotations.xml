<root>
    <item name='javax.swing.plaf.nimbus.NimbusStyle javax.swing.Painter getBackgroundPainter(javax.swing.plaf.synth.SynthContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.Effect.ArrayCache byte[] getTmpByteArray2(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusLookAndFeel java.awt.Color getDerivedColor(java.awt.Color, java.awt.Color, float, boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusStyle java.lang.Object get(javax.swing.plaf.synth.SynthContext, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusStyle java.awt.Font getFontForState(javax.swing.plaf.synth.SynthContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusLookAndFeel java.awt.Color getDerivedColor(java.awt.Color, java.awt.Color, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.AbstractRegionPainter void doPaint(java.awt.Graphics2D, javax.swing.JComponent, int, int, java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusLookAndFeel void register(javax.swing.plaf.synth.Region, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusLookAndFeel java.lang.String getID()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusStyle java.awt.Insets getInsets(javax.swing.plaf.synth.SynthContext, java.awt.Insets)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.AbstractRegionPainter void configureGraphics(java.awt.Graphics2D) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusLookAndFeel boolean shouldUpdateStyleOnEvent(java.beans.PropertyChangeEvent) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusLookAndFeel java.awt.Color getDerivedColor(java.awt.Color, java.awt.Color, float) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusStyle void installDefaults(javax.swing.plaf.synth.SynthContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.AbstractRegionPainter java.awt.LinearGradientPaint decodeGradient(float, float, float, float, float[], java.awt.Color[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.AbstractRegionPainter java.awt.Color decodeColor(java.awt.Color, java.awt.Color, float) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.AbstractRegionPainter java.awt.Color decodeColor(java.awt.Color, java.awt.Color, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext.CacheMode javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext.CacheMode valueOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.Effect.ArrayCache byte[] getTmpByteArray3(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.Effect.ArrayCache byte[] getTmpByteArray1(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusLookAndFeel java.awt.Color getDerivedColor(java.awt.Color, java.awt.Color, float, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusLookAndFeel java.lang.String getDescription()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusStyle java.awt.Font getFontForState(javax.swing.plaf.synth.SynthContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.AbstractRegionPainter javax.swing.plaf.nimbus.AbstractRegionPainter.PaintContext getPaintContext()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.Effect.ArrayCache int[] getTmpIntArray(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusStyle javax.swing.Painter getBorderPainter(javax.swing.plaf.synth.SynthContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusLookAndFeel void register(javax.swing.plaf.synth.Region, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.AbstractRegionPainter java.awt.RadialGradientPaint decodeRadialGradient(float, float, float, float[], java.awt.Color[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusLookAndFeel java.lang.String getName()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusStyle boolean isOpaque(javax.swing.plaf.synth.SynthContext) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusStyle java.awt.Color getColorForState(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.ColorType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusStyle javax.swing.Painter getForegroundPainter(javax.swing.plaf.synth.SynthContext)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.AbstractRegionPainter void doPaint(java.awt.Graphics2D, javax.swing.JComponent, int, int, java.lang.Object[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.AbstractRegionPainter java.awt.Color decodeColor(java.awt.Color, java.awt.Color, float) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusLookAndFeel java.awt.Color getDerivedColor(java.awt.Color, java.awt.Color, float) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.State boolean isInState(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='javax.swing.plaf.nimbus.NimbusLookAndFeel java.awt.Color getDerivedColor(java.awt.Color, java.awt.Color, float, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
