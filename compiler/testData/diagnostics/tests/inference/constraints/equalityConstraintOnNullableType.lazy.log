DescriptorResolver@0 {
    <name not found> = JetTypeImpl@1['Function1<2>']
    <name not found> = null
    <name not found> = null
    <name not found> = null
}

LazyJavaClassDescriptor@2['Exception'] {
    constructors = ArrayList@3[5] { JavaConstructorDescriptor@4['<init>'], JavaConstructorDescriptor@5['<init>'], JavaConstructorDescriptor@6['<init>'], ... } // through LazyJavaClassMemberScope@7
    defaultType = JetTypeImpl@8['Exception']
    functionTypeForSamInterface = null
    typeConstructor = LazyJavaClassTypeConstructor@9['Exception']
}

LazyJavaClassTypeConstructor@9['Exception'] {
    parameters = ArrayList@10[empty]
    supertypes = ArrayList@11[1] { LazyJavaClassifierType@12['Throwable'] }
}

LazyJavaClassifierType@13['String'] {
    arguments = ArrayList@14[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@18['String'] {
    arguments = ArrayList@19[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@21['String'] {
    arguments = ArrayList@22[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@24['String'] {
    arguments = ArrayList@25[empty]
    classifier = JavaClassImpl@15['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@27['String'] {
    arguments = ArrayList@28[empty]
    classifier = JavaClassImpl@23['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@29['String'] {
    arguments = ArrayList@30[empty]
    classifier = JavaClassImpl@20['String']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@17
}

LazyJavaClassifierType@31['Throwable'] {
    arguments = ArrayList@32[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@35['Throwable'] {
    arguments = ArrayList@36[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@38['Throwable'] {
    arguments = ArrayList@39[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'false': Boolean@16
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@41['Throwable'] {
    arguments = ArrayList@42[empty]
    classifier = JavaClassImpl@40['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@43['Throwable'] {
    arguments = ArrayList@44[empty]
    classifier = JavaClassImpl@33['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@45['Throwable'] {
    arguments = ArrayList@46[empty]
    classifier = JavaClassImpl@37['Throwable']
    nullable = 'true': Boolean@26
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaClassifierType@12['Throwable'] {
    arguments = ArrayList@47[empty]
    classifier = JavaClassImpl@48['Throwable']
    typeConstructor = DeserializedClassTypeConstructor@34
}

LazyJavaPackageFragmentProvider@49 {
    packageFragments('<root>': FqName@50) = LazyJavaPackageFragment@51['<root>']
    packageFragments('A': FqName@52) = null
    packageFragments('Int': FqName@53) = null
    packageFragments('T': FqName@54) = null
    packageFragments('Unit': FqName@55) = null
    packageFragments('_': FqName@56) = null
    packageFragments('java': FqName@57) = LazyJavaPackageFragment@58['java']
    packageFragments('java.lang': FqName@59) = LazyJavaPackageFragment@60['lang']
    packageFragments('java.lang.A': FqName@61) = null
    packageFragments('java.lang.Int': FqName@62) = null
    packageFragments('java.lang.T': FqName@63) = null
    packageFragments('java.lang.Unit': FqName@64) = null
    packageFragments('java.lang._': FqName@65) = null
    packageFragments('kotlin': FqName@66) = null
    packageFragments('kotlin.A': FqName@67) = null
    packageFragments('kotlin.Int': FqName@68) = null
    packageFragments('kotlin.T': FqName@69) = null
    packageFragments('kotlin.Unit': FqName@70) = null
    packageFragments('kotlin._': FqName@71) = null
    packageFragments('kotlin.io': FqName@72) = null
    packageFragments('kotlin.jvm': FqName@73) = null
    packageFragments('tests': FqName@74) = null
    packageFragments('tests._checkType': FqName@75) = null
    packageFragments('tests._checkType.A': FqName@76) = null
    packageFragments('tests._checkType.Int': FqName@77) = null
    packageFragments('tests._checkType.T': FqName@78) = null
    packageFragments('tests._checkType.Unit': FqName@79) = null
    packageFragments('tests._checkType._': FqName@80) = null
    topLevelClasses(JavaClassImpl@81['Exception']) = LazyJavaClassDescriptor@2['Exception']
}

LazyJavaPackageFragment@51['<root>'] {
    classes('Exception': Name@82) = null // through LazyPackageFragmentScopeForJavaPackage@83
    classes('Int': Name@84) = null // through LazyPackageFragmentScopeForJavaPackage@83
    classes('_': Name@85) = null // through LazyPackageFragmentScopeForJavaPackage@83
    classes('checkType': Name@86) = null // through LazyPackageFragmentScopeForJavaPackage@83
    classes('doA': Name@87) = null // through LazyPackageFragmentScopeForJavaPackage@83
    classes('foo': Name@88) = null // through LazyPackageFragmentScopeForJavaPackage@83
    classes('tests': Name@89) = null // through LazyPackageFragmentScopeForJavaPackage@83
    deserializedPackageScope = Empty@90 // through LazyPackageFragmentScopeForJavaPackage@83
    functions('Exception': Name@82) = EmptyList@91[empty] // through LazyPackageFragmentScopeForJavaPackage@83
    functions('checkType': Name@86) = EmptyList@91[empty] // through LazyPackageFragmentScopeForJavaPackage@83
    functions('doA': Name@87) = EmptyList@91[empty] // through LazyPackageFragmentScopeForJavaPackage@83
    functions('foo': Name@88) = EmptyList@91[empty] // through LazyPackageFragmentScopeForJavaPackage@83
    functions('tests': Name@92) = EmptyList@91[empty] // through LazyPackageFragmentScopeForJavaPackage@83
    memberIndex = computeMemberIndex$1@93 // through LazyPackageFragmentScopeForJavaPackage@83
}

LazyJavaPackageFragment@58['java'] {
    classes('lang': Name@94) = null // through LazyPackageFragmentScopeForJavaPackage@95
    deserializedPackageScope = Empty@90 // through LazyPackageFragmentScopeForJavaPackage@95
    functions('lang': Name@96) = EmptyList@91[empty] // through LazyPackageFragmentScopeForJavaPackage@95
    memberIndex = computeMemberIndex$1@97 // through LazyPackageFragmentScopeForJavaPackage@95
}

LazyJavaPackageFragment@60['lang'] {
    classes('Exception': Name@82) = LazyJavaClassDescriptor@2['Exception'] // through LazyPackageFragmentScopeForJavaPackage@98
    classes('checkType': Name@86) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('doA': Name@87) = null // through LazyPackageFragmentScopeForJavaPackage@98
    classes('foo': Name@88) = null // through LazyPackageFragmentScopeForJavaPackage@98
    deserializedPackageScope = Empty@90 // through LazyPackageFragmentScopeForJavaPackage@98
    functions('Exception': Name@82) = EmptyList@91[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    functions('checkType': Name@86) = EmptyList@91[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    functions('doA': Name@87) = EmptyList@91[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    functions('foo': Name@88) = EmptyList@91[empty] // through LazyPackageFragmentScopeForJavaPackage@98
    memberIndex = computeMemberIndex$1@99 // through LazyPackageFragmentScopeForJavaPackage@98
}

ResolutionTaskHolder@100 {
    <name not found> = ArrayList@101[1] { ResolutionCandidate@102 }
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
}

ResolutionTaskHolder@103 {
    <name not found> = ArrayList@104[1] { ResolutionCandidate@105 }
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
}

ResolutionTaskHolder@106 {
    <name not found> = ArrayList@107[1] { ResolutionCandidate@108 }
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
}

ResolutionTaskHolder@109 {
    <name not found> = ArrayList@110[1] { ResolutionCandidate@111 }
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
}

ResolutionTaskHolder@112 {
    <name not found> = ArrayList@113[1] { ResolutionCandidate@114 }
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
}

ResolutionTaskHolder@115 {
    <name not found> = ArrayList@116[1] { ResolutionCandidate@117 }
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
}

ResolutionTaskHolder@118 {
    <name not found> = ArrayList@119[1] { ResolutionCandidate@120 }
}

ResolutionTaskHolder@121 {
    <name not found> = ArrayList@122[1] { ResolutionCandidate@123 }
}

ResolutionTaskHolder@124 {
    <name not found> = ArrayList@125[1] { ResolutionCandidate@126 }
}

ResolutionTaskHolder@127 {
    <name not found> = ArrayList@128[1] { ResolutionCandidate@129 }
}

ResolutionTaskHolder@130 {
    <name not found> = ArrayList@131[1] { ResolutionCandidate@132 }
}

ResolutionTaskHolder@133 {
    <name not found> = ArrayList@134[1] { ResolutionCandidate@135 }
}

ResolutionTaskHolder@136 {
    <name not found> = ArrayList@137[1] { ResolutionCandidate@138 }
}

ResolutionTaskHolder@139 {
    <name not found> = ArrayList@140[1] { ResolutionCandidate@141 }
}

ResolutionTaskHolder@142 {
    <name not found> = ArrayList@143[1] { ResolutionCandidate@144 }
}

ResolutionTaskHolder@145 {
    <name not found> = ArrayList@146[1] { ResolutionCandidate@147 }
}

ResolutionTaskHolder@148 {
    <name not found> = ArrayList@149[1] { ResolutionCandidate@150 }
}

ResolutionTaskHolder@151 {
    <name not found> = ArrayList@152[1] { ResolutionCandidate@153 }
}

ResolutionTaskHolder@154 {
    <name not found> = ArrayList@155[1] { ResolutionCandidate@156 }
}

ResolutionTaskHolder@157 {
    <name not found> = ArrayList@158[1] { ResolutionCandidate@159 }
}

ResolutionTaskHolder@160 {
    <name not found> = ArrayList@161[1] { ResolutionCandidate@162 }
}

ResolutionTaskHolder@163 {
    <name not found> = ArrayList@164[4] { ResolutionCandidate@165, ResolutionCandidate@166, ResolutionCandidate@167, ... }
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
}

ResolutionTaskHolder@168 {
    <name not found> = ArrayList@169[4] { ResolutionCandidate@170, ResolutionCandidate@171, ResolutionCandidate@172, ... }
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
}

null {
    <name not found> = ArrayList@173[1] { ResolutionCandidate@159 }
    <name not found> = ArrayList@174[1] { ResolutionCandidate@150 }
    <name not found> = ArrayList@175[1] { ResolutionCandidate@126 }
    <name not found> = ArrayList@176[1] { ResolutionCandidate@129 }
    <name not found> = ArrayList@177[1] { ResolutionCandidate@138 }
    <name not found> = ArrayList@178[1] { ResolutionCandidate@102 }
    <name not found> = ArrayList@179[1] { ResolutionCandidate@123 }
    <name not found> = ArrayList@180[1] { ResolutionCandidate@108 }
    <name not found> = ArrayList@181[1] { ResolutionCandidate@132 }
    <name not found> = ArrayList@182[1] { ResolutionCandidate@156 }
    <name not found> = ArrayList@183[1] { ResolutionCandidate@135 }
    <name not found> = ArrayList@184[1] { ResolutionCandidate@105 }
    <name not found> = ArrayList@185[1] { ResolutionCandidate@120 }
    <name not found> = ArrayList@186[1] { ResolutionCandidate@111 }
    <name not found> = ArrayList@187[1] { ResolutionCandidate@144 }
    <name not found> = ArrayList@188[1] { ResolutionCandidate@147 }
    <name not found> = ArrayList@189[1] { ResolutionCandidate@153 }
    <name not found> = ArrayList@190[1] { ResolutionCandidate@114 }
    <name not found> = ArrayList@191[1] { ResolutionCandidate@141 }
    <name not found> = ArrayList@192[1] { ResolutionCandidate@117 }
    <name not found> = ArrayList@193[1] { ResolutionCandidate@162 }
    <name not found> = ArrayList@194[5] { ResolutionCandidate@165, ResolutionCandidate@166, ResolutionCandidate@167, ... }
    <name not found> = ArrayList@195[5] { ResolutionCandidate@170, ResolutionCandidate@171, ResolutionCandidate@172, ... }
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
    <name not found> = EmptyList@91[empty]
}
