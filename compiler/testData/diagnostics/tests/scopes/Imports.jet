// FILE:a.kt
package a

import b.B        //class
import b.foo      //function
import b.ext      //extension function
import b.value    //property
import b.C.<!CANNOT_IMPORT_OBJECT_MEMBERS!>bar<!>    //function from class object
import b.C.<!CANNOT_IMPORT_OBJECT_MEMBERS!>cValue<!> //property from class object
import b.constant.<!CANNOT_IMPORT_VARIABLE_MEMBERS!>fff<!>     //function from val
import b.constant.<!CANNOT_IMPORT_VARIABLE_MEMBERS!>dValue<!>  //property from val
import b.E.<!CANNOT_IMPORT_OBJECT_MEMBERS!>f<!>      //val from class object
import <!UNRESOLVED_REFERENCE!>smth<!>.illegal

fun test(arg: B) {
    foo(value)
    arg.ext()

    <!UNRESOLVED_REFERENCE!>bar<!>()
    foo(<!UNRESOLVED_REFERENCE!>cValue<!>)

    <!UNRESOLVED_REFERENCE!>fff<!>(<!UNRESOLVED_REFERENCE!>dValue<!>)

    <!UNRESOLVED_REFERENCE!>f<!>.f()
}

// FILE:b.kt
package b

class B() {}

fun foo(i: Int) = i

fun B.ext() {}

val value = 0

class C() {
    class object {
        fun bar() {}
        val cValue = 1
    }
}

class D() {
    fun fff(s: String) = s
    val dValue = "w"
}

val constant = D()

class E() {
    class object {
        val f = F()
    }
}

class F() {
    fun f() {}
}

//FILE:c.kt
package c

import <!CANNOT_IMPORT_OBJECT_MEMBERS!>C<!>.*

object C {
    fun f() {
    }
    val i = 3
}

fun foo() {
    if (<!UNRESOLVED_REFERENCE!>i<!> == 3) <!UNRESOLVED_REFERENCE!>f<!>()
}