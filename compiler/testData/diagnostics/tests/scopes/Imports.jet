//FILE:a.kt
package a

import b.B        //class
import b.foo      //function
import b.ext      //extension function
import b.value    //property
import b.C.bar    //function from class object
import b.C.cValue //property from class object
import b.constant.fff     //function from val
import b.constant.dValue  //property from val
import b.E.f      //val from class object

fun test(arg: B) {
    foo(value)
    arg.ext()

    bar()
    foo(cValue)

    fff(dValue)

    f.f()
}

//FILE:b.kt
package b

class B() {}

fun foo(i: Int) = i

fun B.ext() {}

val value = 0

class C() {
    class object {
        fun bar() {}
        val cValue = 1
    }
}

class D() {
    fun fff(s: String) = s
    val dValue = "w"
}

val constant = D()

class E() {
    class object {
        val f = F()
    }
}

class F() {
    fun f() {}
}

//FILE:c.kt
package c

import C.*

object C {
    fun a() {
    }
    val b = 3
}

fun foo() {
    if (b == 3) a()
}