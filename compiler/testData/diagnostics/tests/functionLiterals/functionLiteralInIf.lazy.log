LazyJavaClassDescriptor@0['AbstractCollection'] {
    defaultType = JetTypeImpl@1['AbstractCollection<1>']
    functions('add': Name@2) = ArrayList@3[1] { JavaMethodDescriptor@4['add'] } // through LazyJavaClassMemberScope@5
    memberIndex = computeMemberIndex$1@6 // through LazyJavaClassMemberScope@5
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@7['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@8['AbstractCollection']
}

LazyJavaClassDescriptor@9['AbstractSet'] {
    defaultType = JetTypeImpl@10['AbstractSet<1>']
    functions('add': Name@2) = ArrayList@11[1] { DeserializedSimpleFunctionDescriptor@12['add'] } // through LazyJavaClassMemberScope@13
    memberIndex = computeMemberIndex$1@14 // through LazyJavaClassMemberScope@13
    typeConstructor = LazyJavaClassTypeConstructor@15['AbstractSet']
}

LazyJavaClassDescriptor@16['HashSet'] {
    constructors = ArrayList@17[5] { JavaConstructorDescriptor@18['<init>'], JavaConstructorDescriptor@19['<init>'], JavaConstructorDescriptor@20['<init>'], ... } // through LazyJavaClassMemberScope@21
    defaultType = JetTypeImpl@22['HashSet<1>']
    enumEntryIndex = LinkedHashMap@23 // through LazyJavaClassMemberScope@21
    functionTypeForSamInterface = null
    functions('add': Name@24) = ArrayList@25[1] { JavaMethodDescriptor@26['add'] } // through LazyJavaClassMemberScope@21
    memberIndex = computeMemberIndex$1@27 // through LazyJavaClassMemberScope@21
    nestedClassIndex = LinkedHashMap@28 // through LazyJavaClassMemberScope@21
    nestedClasses('add': Name@24) = null // through LazyJavaClassMemberScope@21
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@29['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@30['HashSet']
}

LazyJavaClassDescriptor@31['Serializable'] {
    functions('add': Name@2) = EmptyList@32[empty] // through LazyJavaClassMemberScope@33
    memberIndex = computeMemberIndex$1@34 // through LazyJavaClassMemberScope@33
    typeConstructor = LazyJavaClassTypeConstructor@35['Serializable']
}

LazyJavaClassTypeConstructor@8['AbstractCollection'] {
    parameters = ArrayList@36[1] { LazyJavaTypeParameterDescriptor@37['E'] }
    supertypes = ArrayList@38[1] { LazyJavaClassifierType@39['Collection<E>'] }
}

LazyJavaClassTypeConstructor@15['AbstractSet'] {
    parameters = ArrayList@40[1] { LazyJavaTypeParameterDescriptor@41['E'] }
    supertypes = ArrayList@42[2] { LazyJavaClassifierType@43['AbstractCollection<E>'], LazyJavaClassifierType@44['Set<E>'] }
}

LazyJavaClassTypeConstructor@30['HashSet'] {
    parameters = ArrayList@45[1] { LazyJavaTypeParameterDescriptor@46['E'] }
    supertypes = ArrayList@47[4] { LazyJavaClassifierType@48['AbstractSet<E>'], LazyJavaClassifierType@49['Set<E>'], LazyJavaClassifierType@50['Cloneable'], ... }
}

LazyJavaClassTypeConstructor@35['Serializable'] {
    parameters = ArrayList@51[empty]
    supertypes = ArrayList@52[1] { JetTypeImpl@53['Any'] }
}

LazyJavaClassifierType@43['AbstractCollection<E>'] {
    arguments = ArrayList@54[1] { TypeProjectionImpl@55 }
    classifier = JavaClassImpl@56['AbstractCollection']
    memberScope = SubstitutingScope@57
    nullable = 'false': Boolean@58
    typeConstructor = LazyJavaClassTypeConstructor@8['AbstractCollection']
}

LazyJavaClassifierType@48['AbstractSet<E>'] {
    arguments = ArrayList@59[1] { TypeProjectionImpl@60 }
    classifier = JavaClassImpl@61['AbstractSet']
    memberScope = SubstitutingScope@62
    typeConstructor = LazyJavaClassTypeConstructor@15['AbstractSet']
}

LazyJavaClassifierType@50['Cloneable'] {
    arguments = ArrayList@63[empty]
    classifier = JavaClassImpl@64['Cloneable']
    memberScope = DeserializedClassMemberScope@65
    typeConstructor = DeserializedClassTypeConstructor@66
}

LazyJavaClassifierType@67['Collection<? extends E>'] {
    arguments = ArrayList@68[1] { TypeProjectionImpl@69 }
    classifier = JavaClassImpl@70['Collection']
    memberScope = SubstitutingScope@71
    nullable = 'false': Boolean@58
    typeConstructor = DeserializedClassTypeConstructor@72
}

LazyJavaClassifierType@73['Collection<? extends E>'] {
    arguments = ArrayList@74[1] { TypeProjectionImpl@75 }
    classifier = JavaClassImpl@70['Collection']
    memberScope = SubstitutingScope@76
    nullable = 'true': Boolean@77
    typeConstructor = DeserializedClassTypeConstructor@78
}

LazyJavaClassifierType@39['Collection<E>'] {
    arguments = ArrayList@79[1] { TypeProjectionImpl@80 }
    classifier = JavaClassImpl@81['Collection']
    memberScope = SubstitutingScope@82
    typeConstructor = DeserializedClassTypeConstructor@72
}

LazyJavaClassifierType@83['E'] {
    arguments = ArrayList@84[empty]
    classifier = JavaTypeParameterImpl@85['E']
    nullable = 'false': Boolean@58
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
}

LazyJavaClassifierType@87['E'] {
    arguments = ArrayList@88[empty]
    classifier = JavaTypeParameterImpl@89['E']
    nullable = 'false': Boolean@58
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@91['E'] {
    arguments = ArrayList@92[empty]
    classifier = JavaTypeParameterImpl@93['E']
    nullable = 'false': Boolean@58
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
}

LazyJavaClassifierType@94['E'] {
    arguments = ArrayList@95[empty]
    classifier = JavaTypeParameterImpl@96['E']
    nullable = 'false': Boolean@58
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@97['E'] {
    arguments = ArrayList@98[empty]
    classifier = JavaTypeParameterImpl@99['E']
    nullable = 'false': Boolean@58
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@100['E'] {
    arguments = ArrayList@101[empty]
    classifier = JavaTypeParameterImpl@102['E']
    nullable = 'false': Boolean@58
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@103['E'] {
    arguments = ArrayList@104[empty]
    classifier = JavaTypeParameterImpl@105['E']
    nullable = 'false': Boolean@58
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@106['E'] {
    arguments = ArrayList@107[empty]
    classifier = JavaTypeParameterImpl@108['E']
    nullable = 'false': Boolean@58
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@109
}

LazyJavaClassifierType@110['E'] {
    arguments = ArrayList@111[empty]
    classifier = JavaTypeParameterImpl@112['E']
    nullable = 'false': Boolean@58
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@109
}

LazyJavaClassifierType@113['E'] {
    arguments = ArrayList@114[empty]
    classifier = JavaTypeParameterImpl@105['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@115['E'] {
    arguments = ArrayList@116[empty]
    classifier = JavaTypeParameterImpl@89['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@117['E'] {
    arguments = ArrayList@118[empty]
    classifier = JavaTypeParameterImpl@112['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@109
}

LazyJavaClassifierType@119['E'] {
    arguments = ArrayList@120[empty]
    classifier = JavaTypeParameterImpl@93['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
}

LazyJavaClassifierType@121['E'] {
    arguments = ArrayList@122[empty]
    classifier = JavaTypeParameterImpl@102['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@123['E'] {
    arguments = ArrayList@124[empty]
    classifier = JavaTypeParameterImpl@85['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
}

LazyJavaClassifierType@125['E'] {
    arguments = ArrayList@126[empty]
    classifier = JavaTypeParameterImpl@96['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@127['E'] {
    arguments = ArrayList@128[empty]
    classifier = JavaTypeParameterImpl@99['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
}

LazyJavaClassifierType@129['E'] {
    arguments = ArrayList@130[empty]
    classifier = JavaTypeParameterImpl@108['E']
    nullable = 'true': Boolean@77
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@109
}

LazyJavaClassifierType@131['Object'] {
    classifier = JavaClassImpl@132['Object']
    typeConstructor = DeserializedClassTypeConstructor@133
}

LazyJavaClassifierType@134['Object'] {
    classifier = JavaClassImpl@135['Object']
    typeConstructor = DeserializedClassTypeConstructor@133
}

LazyJavaClassifierType@136['Serializable'] {
    arguments = ArrayList@137[empty]
    classifier = JavaClassImpl@138['Serializable']
    memberScope = LazyJavaClassMemberScope@33
    typeConstructor = LazyJavaClassTypeConstructor@35['Serializable']
}

LazyJavaClassifierType@44['Set<E>'] {
    arguments = ArrayList@139[1] { TypeProjectionImpl@140 }
    classifier = JavaClassImpl@141['Set']
    memberScope = SubstitutingScope@142
    nullable = 'false': Boolean@58
    typeConstructor = DeserializedClassTypeConstructor@143
}

LazyJavaClassifierType@49['Set<E>'] {
    arguments = ArrayList@144[1] { TypeProjectionImpl@145 }
    classifier = JavaClassImpl@146['Set']
    memberScope = SubstitutingScope@147
    typeConstructor = DeserializedClassTypeConstructor@143
}

LazyJavaPackageFragmentProvider@148 {
    packageFragments('<root>': FqName@149) = LazyJavaPackageFragment@150['<root>']
    packageFragments('Int': FqName@151) = null
    packageFragments('Unit': FqName@152) = null
    packageFragments('java': FqName@153) = LazyJavaPackageFragment@154['java']
    packageFragments('java.io': FqName@155) = LazyJavaPackageFragment@156['io']
    packageFragments('java.lang': FqName@157) = LazyJavaPackageFragment@158['lang']
    packageFragments('java.lang.Int': FqName@159) = null
    packageFragments('java.lang.Unit': FqName@160) = null
    packageFragments('java.util': FqName@161) = LazyJavaPackageFragment@162['util']
    packageFragments('java.util.HashSet': FqName@163) = null
    packageFragments('kotlin': FqName@164) = null
    packageFragments('kotlin.Int': FqName@165) = null
    packageFragments('kotlin.Unit': FqName@166) = null
    packageFragments('kotlin.io': FqName@167) = null
    packageFragments('kotlin.jvm': FqName@168) = null
    topLevelClasses(JavaClassImpl@56['AbstractCollection']) = LazyJavaClassDescriptor@0['AbstractCollection']
    topLevelClasses(JavaClassImpl@61['AbstractSet']) = LazyJavaClassDescriptor@9['AbstractSet']
    topLevelClasses(JavaClassImpl@169['HashSet']) = LazyJavaClassDescriptor@16['HashSet']
    topLevelClasses(JavaClassImpl@138['Serializable']) = LazyJavaClassDescriptor@31['Serializable']
}

LazyJavaPackageFragment@150['<root>'] {
    classes('HashSet': Name@170) = null // through LazyPackageFragmentScopeForJavaPackage@171
    classes('Int': Name@172) = null // through LazyPackageFragmentScopeForJavaPackage@171
    classes('Unit': Name@173) = null // through LazyPackageFragmentScopeForJavaPackage@171
    classes('java': Name@174) = null // through LazyPackageFragmentScopeForJavaPackage@171
    deserializedPackageScope = Empty@175 // through LazyPackageFragmentScopeForJavaPackage@171
    functions('HashSet': Name@176) = EmptyList@32[empty] // through LazyPackageFragmentScopeForJavaPackage@171
    functions('java': Name@177) = EmptyList@32[empty] // through LazyPackageFragmentScopeForJavaPackage@171
    memberIndex = computeMemberIndex$1@178 // through LazyPackageFragmentScopeForJavaPackage@171
}

LazyJavaPackageFragment@154['java'] {
    classes('lang': Name@179) = null // through LazyPackageFragmentScopeForJavaPackage@180
    classes('util': Name@181) = null // through LazyPackageFragmentScopeForJavaPackage@180
    deserializedPackageScope = Empty@175 // through LazyPackageFragmentScopeForJavaPackage@180
    functions('lang': Name@182) = EmptyList@32[empty] // through LazyPackageFragmentScopeForJavaPackage@180
    functions('util': Name@183) = EmptyList@32[empty] // through LazyPackageFragmentScopeForJavaPackage@180
    memberIndex = computeMemberIndex$1@184 // through LazyPackageFragmentScopeForJavaPackage@180
}

LazyJavaPackageFragment@158['lang'] {
    classes('HashSet': Name@176) = null // through LazyPackageFragmentScopeForJavaPackage@185
    deserializedPackageScope = Empty@175 // through LazyPackageFragmentScopeForJavaPackage@185
    functions('HashSet': Name@176) = EmptyList@32[empty] // through LazyPackageFragmentScopeForJavaPackage@185
    memberIndex = computeMemberIndex$1@186 // through LazyPackageFragmentScopeForJavaPackage@185
}

LazyJavaPackageFragment@162['util'] {
    classes('HashSet': Name@187) = LazyJavaClassDescriptor@16['HashSet'] // through LazyPackageFragmentScopeForJavaPackage@188
    deserializedPackageScope = Empty@175 // through LazyPackageFragmentScopeForJavaPackage@188
    functions('HashSet': Name@189) = EmptyList@32[empty] // through LazyPackageFragmentScopeForJavaPackage@188
    memberIndex = computeMemberIndex$1@190 // through LazyPackageFragmentScopeForJavaPackage@188
}

LazyJavaTypeParameterDescriptor@46['E'] {
    defaultType = JetTypeImpl@191['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@90
    upperBounds = LinkedHashSet@192[1] { NullableType@193 }
    upperBoundsAsType = NullableType@193
}

LazyJavaTypeParameterDescriptor@37['E'] {
    defaultType = JetTypeImpl@194['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@86
    upperBounds = LinkedHashSet@195[1] { NullableType@196 }
    upperBoundsAsType = NullableType@196
}

LazyJavaTypeParameterDescriptor@41['E'] {
    defaultType = JetTypeImpl@197['E']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@109
}

LazyJavaTypeParameterResolver@198 {
    resolve(JavaTypeParameterImpl@199['E']) = LazyJavaTypeParameterDescriptor@37['E']
}

LazyJavaTypeParameterResolver@200 {
    resolve(JavaTypeParameterImpl@201['E']) = LazyJavaTypeParameterDescriptor@41['E']
}

LazyJavaTypeParameterResolver@202 {
    resolve(JavaTypeParameterImpl@203['E']) = LazyJavaTypeParameterDescriptor@46['E']
}

LazyJavaTypeParameterResolver@204 {
    resolve(JavaTypeParameterImpl@93['E']) = null
}

LazyJavaTypeParameterResolver@205 {
    resolve(JavaTypeParameterImpl@105['E']) = null
}

ResolutionTaskHolder@206 {
    <name not found> = ArrayList@207[1] { ResolutionCandidate@208 }
}

ResolutionTaskHolder@209 {
    <name not found> = ArrayList@210[1] { ResolutionCandidate@211 }
}

ResolutionTaskHolder@212 {
    <name not found> = ArrayList@213[1] { ResolutionCandidate@214 }
}

ResolutionTaskHolder@215 {
    <name not found> = ArrayList@216[1] { ResolutionCandidate@217 }
}

ResolutionTaskHolder@218 {
    <name not found> = ArrayList@219[1] { ResolutionCandidate@220 }
}

ResolutionTaskHolder@221 {
    <name not found> = ArrayList@222[4] { ResolutionCandidate@223, ResolutionCandidate@224, ResolutionCandidate@225, ... }
    <name not found> = EmptyList@32[empty]
    <name not found> = EmptyList@32[empty]
}

null {
    <name not found> = ArrayList@226[1] { ResolutionCandidate@211 }
    <name not found> = ArrayList@227[1] { ResolutionCandidate@214 }
    <name not found> = ArrayList@228[1] { ResolutionCandidate@220 }
    <name not found> = ArrayList@229[1] { ResolutionCandidate@217 }
    <name not found> = ArrayList@230[1] { ResolutionCandidate@208 }
    <name not found> = ArrayList@231[5] { ResolutionCandidate@223, ResolutionCandidate@224, ResolutionCandidate@225, ... }
    <name not found> = EmptyList@32[empty]
    <name not found> = EmptyList@32[empty]
}
