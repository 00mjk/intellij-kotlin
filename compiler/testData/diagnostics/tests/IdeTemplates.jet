fun main(args : Array<String>) {
    if (<!UNRESOLVED_IDE_TEMPLATE!><#<condition>#><!>) {
        <!UNRESOLVED_IDE_TEMPLATE!><#<block>#><!>
    } else {
        <!UNRESOLVED_IDE_TEMPLATE!><#<block>#><!>
    }

    fun <!UNRESOLVED_IDE_TEMPLATE!><#<name>#><!>(<#<params>#>) : <#<returnType>#> {
        <#<body>#>
    }

    for (<#<i>#> in <!UNRESOLVED_IDE_TEMPLATE!><#<elements>#><!>) {
        <!UNRESOLVED_IDE_TEMPLATE!><#<body>#><!>
    }

    when (<!UNRESOLVED_IDE_TEMPLATE!><#<expression>#><!>) {
        <!UNRESOLVED_IDE_TEMPLATE!><#<condition>#><!> -> <#<value>#>
        else -> <!UNRESOLVED_IDE_TEMPLATE!><#<elseValue>#><!>
    }

    <!REDECLARATION!>var <#<name>#> = <!UNRESOLVED_IDE_TEMPLATE!><#<value>#><!><!>

    <!REDECLARATION, REDECLARATION!>class <#<name>#> {
        <#<body>#>
    }<!>

    <!REDECLARATION!>class <#<name>#> {
        <!REDECLARATION!>var <#<name>#> : <#<varType>#>
        get() <!RETURN_TYPE_MISMATCH!>{
            <!UNRESOLVED_IDE_TEMPLATE!><#<body>#><!>
        }<!>
        set(value) {
            <!UNRESOLVED_IDE_TEMPLATE!><#<body>#><!>
        }<!>

        <!REDECLARATION!>val <#<name>#> : <#<valType>#>
        get() <!RETURN_TYPE_MISMATCH!>{
            <!UNRESOLVED_IDE_TEMPLATE!><#<body>#><!>
        }<!><!>
    }<!>
}