LazyJavaClassDescriptor@0['JC'] {
    defaultType = JetTypeImpl@1['JC<1>']
    enumEntryIndex = LinkedHashMap@2 // through LazyJavaClassMemberScope@3
    functionTypeForSamInterface = null
    functions('getIterable': Name@4) = ArrayList@5[1] { JavaMethodDescriptor@6['getIterable'] } // through LazyJavaClassMemberScope@3
    functions('getIterator': Name@7) = ArrayList@8[1] { JavaMethodDescriptor@9['getIterator'] } // through LazyJavaClassMemberScope@3
    functions('setIterable': Name@10) = ArrayList@11[1] { JavaMethodDescriptor@12['setIterable'] } // through LazyJavaClassMemberScope@3
    functions('setIterator': Name@13) = ArrayList@14[1] { JavaMethodDescriptor@15['setIterator'] } // through LazyJavaClassMemberScope@3
    memberIndex = computeMemberIndex$1@16 // through LazyJavaClassMemberScope@3
    nestedClassIndex = LinkedHashMap@17 // through LazyJavaClassMemberScope@3
    nestedClasses('getIterable': Name@4) = null // through LazyJavaClassMemberScope@3
    nestedClasses('getIterator': Name@7) = null // through LazyJavaClassMemberScope@3
    nestedClasses('setIterable': Name@10) = null // through LazyJavaClassMemberScope@3
    nestedClasses('setIterator': Name@13) = null // through LazyJavaClassMemberScope@3
    thisAsReceiverParameter = LazyClassReceiverParameterDescriptor@18['<this>']
    typeConstructor = LazyJavaClassTypeConstructor@19['JC']
}

LazyJavaClassTypeConstructor@19['JC'] {
    parameters = ArrayList@20[1] { LazyJavaTypeParameterDescriptor@21['T'] }
    supertypes = ArrayList@22[1] { JetTypeImpl@23['Any'] }
}

LazyJavaClassifierType@24['Iterable<T>'] {
    arguments = ArrayList@25[1] { TypeProjectionImpl@26 }
    classifier = JavaClassImpl@27['Iterable']
    memberScope = SubstitutingScope@28
    nullable = 'false': Boolean@29
    typeConstructor = DeserializedClassTypeConstructor@30
}

LazyJavaClassifierType@31['Iterable<T>'] {
    arguments = ArrayList@32[1] { TypeProjectionImpl@33 }
    classifier = JavaClassImpl@34['Iterable']
    memberScope = SubstitutingScope@35
    nullable = 'false': Boolean@29
    typeConstructor = DeserializedClassTypeConstructor@30
}

LazyJavaClassifierType@36['Iterable<T>'] {
    arguments = ArrayList@37[1] { TypeProjectionImpl@38 }
    classifier = JavaClassImpl@34['Iterable']
    memberScope = SubstitutingScope@39
    nullable = 'true': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@42['Iterable<T>'] {
    arguments = ArrayList@43[1] { TypeProjectionImpl@44 }
    classifier = JavaClassImpl@27['Iterable']
    memberScope = SubstitutingScope@45
    nullable = 'true': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@41
}

LazyJavaClassifierType@46['Iterator<T>'] {
    arguments = ArrayList@47[1] { TypeProjectionImpl@48 }
    classifier = JavaClassImpl@49['Iterator']
    memberScope = SubstitutingScope@50
    nullable = 'false': Boolean@29
    typeConstructor = DeserializedClassTypeConstructor@51
}

LazyJavaClassifierType@52['Iterator<T>'] {
    arguments = ArrayList@53[1] { TypeProjectionImpl@54 }
    classifier = JavaClassImpl@55['Iterator']
    memberScope = SubstitutingScope@56
    nullable = 'false': Boolean@29
    typeConstructor = DeserializedClassTypeConstructor@51
}

LazyJavaClassifierType@57['Iterator<T>'] {
    arguments = ArrayList@58[1] { TypeProjectionImpl@59 }
    classifier = JavaClassImpl@49['Iterator']
    memberScope = SubstitutingScope@60
    nullable = 'true': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@61
}

LazyJavaClassifierType@62['Iterator<T>'] {
    arguments = ArrayList@63[1] { TypeProjectionImpl@64 }
    classifier = JavaClassImpl@55['Iterator']
    memberScope = SubstitutingScope@65
    nullable = 'true': Boolean@40
    typeConstructor = DeserializedClassTypeConstructor@61
}

LazyJavaClassifierType@66['Object'] {
    classifier = JavaClassImpl@67['Object']
    typeConstructor = DeserializedClassTypeConstructor@68
}

LazyJavaClassifierType@69['T'] {
    arguments = ArrayList@70[empty]
    classifier = JavaTypeParameterImpl@71['T']
    nullable = 'false': Boolean@29
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@73['T'] {
    arguments = ArrayList@74[empty]
    classifier = JavaTypeParameterImpl@75['T']
    nullable = 'false': Boolean@29
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@76['T'] {
    arguments = ArrayList@77[empty]
    classifier = JavaTypeParameterImpl@78['T']
    nullable = 'false': Boolean@29
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@79['T'] {
    arguments = ArrayList@80[empty]
    classifier = JavaTypeParameterImpl@81['T']
    nullable = 'false': Boolean@29
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@82['T'] {
    arguments = ArrayList@83[empty]
    classifier = JavaTypeParameterImpl@84['T']
    nullable = 'false': Boolean@29
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@85['T'] {
    arguments = ArrayList@86[empty]
    classifier = JavaTypeParameterImpl@87['T']
    nullable = 'false': Boolean@29
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@88['T'] {
    arguments = ArrayList@89[empty]
    classifier = JavaTypeParameterImpl@90['T']
    nullable = 'false': Boolean@29
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@91['T'] {
    arguments = ArrayList@92[empty]
    classifier = JavaTypeParameterImpl@93['T']
    nullable = 'false': Boolean@29
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@94['T'] {
    arguments = ArrayList@95[empty]
    classifier = JavaTypeParameterImpl@75['T']
    nullable = 'true': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@96['T'] {
    arguments = ArrayList@97[empty]
    classifier = JavaTypeParameterImpl@78['T']
    nullable = 'true': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@98['T'] {
    arguments = ArrayList@99[empty]
    classifier = JavaTypeParameterImpl@81['T']
    nullable = 'true': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@100['T'] {
    arguments = ArrayList@101[empty]
    classifier = JavaTypeParameterImpl@84['T']
    nullable = 'true': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@102['T'] {
    arguments = ArrayList@103[empty]
    classifier = JavaTypeParameterImpl@90['T']
    nullable = 'true': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@104['T'] {
    arguments = ArrayList@105[empty]
    classifier = JavaTypeParameterImpl@93['T']
    nullable = 'true': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@106['T'] {
    arguments = ArrayList@107[empty]
    classifier = JavaTypeParameterImpl@71['T']
    nullable = 'true': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaClassifierType@108['T'] {
    arguments = ArrayList@109[empty]
    classifier = JavaTypeParameterImpl@87['T']
    nullable = 'true': Boolean@40
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
}

LazyJavaPackageFragmentProvider@110 {
    packageFragments('<root>': FqName@111) = LazyJavaPackageFragment@112['<root>']
    packageFragments('Int': FqName@113) = null
    packageFragments('Iterable': FqName@114) = null
    packageFragments('Iterator': FqName@115) = null
    packageFragments('JC': FqName@116) = null
    packageFragments('MutableIterable': FqName@117) = null
    packageFragments('MutableIterator': FqName@118) = null
    packageFragments('a': FqName@119) = LazyJavaPackageFragment@120['a']
    packageFragments('a.JC': FqName@121) = null
    packageFragments('java': FqName@122) = LazyJavaPackageFragment@123['java']
    packageFragments('java.lang': FqName@124) = LazyJavaPackageFragment@125['lang']
    packageFragments('java.lang.Int': FqName@126) = null
    packageFragments('java.lang.Iterable': FqName@127) = null
    packageFragments('java.lang.Iterator': FqName@128) = null
    packageFragments('java.lang.JC': FqName@129) = null
    packageFragments('java.lang.MutableIterable': FqName@130) = null
    packageFragments('java.lang.MutableIterator': FqName@131) = null
    packageFragments('kotlin': FqName@132) = null
    packageFragments('kotlin.Int': FqName@133) = null
    packageFragments('kotlin.Iterable': FqName@134) = null
    packageFragments('kotlin.Iterator': FqName@135) = null
    packageFragments('kotlin.JC': FqName@136) = null
    packageFragments('kotlin.MutableIterable': FqName@137) = null
    packageFragments('kotlin.MutableIterator': FqName@138) = null
    packageFragments('kotlin.io': FqName@139) = null
    packageFragments('kotlin.jvm': FqName@140) = null
    packageFragments('n': FqName@141) = null
    packageFragments('n.Int': FqName@142) = null
    packageFragments('n.Iterable': FqName@143) = null
    packageFragments('n.Iterator': FqName@144) = null
    packageFragments('n.JC': FqName@145) = null
    packageFragments('n.MutableIterable': FqName@146) = null
    packageFragments('n.MutableIterator': FqName@147) = null
    topLevelClasses(JavaClassImpl@148['JC']) = LazyJavaClassDescriptor@0['JC']
}

LazyJavaPackageFragment@120['a'] {
    classes('JC': Name@149) = LazyJavaClassDescriptor@0['JC'] // through LazyPackageFragmentScopeForJavaPackage@150
    deserializedPackageScope = Empty@151 // through LazyPackageFragmentScopeForJavaPackage@150
    functions('JC': Name@152) = EmptyList@153[empty] // through LazyPackageFragmentScopeForJavaPackage@150
    memberIndex = computeMemberIndex$1@154 // through LazyPackageFragmentScopeForJavaPackage@150
}

LazyJavaPackageFragment@123['java'] {
    classes('lang': Name@155) = null // through LazyPackageFragmentScopeForJavaPackage@156
    deserializedPackageScope = Empty@151 // through LazyPackageFragmentScopeForJavaPackage@156
    functions('lang': Name@157) = EmptyList@153[empty] // through LazyPackageFragmentScopeForJavaPackage@156
    memberIndex = computeMemberIndex$1@158 // through LazyPackageFragmentScopeForJavaPackage@156
}

LazyJavaTypeParameterDescriptor@21['T'] {
    defaultType = JetTypeImpl@159['T']
    typeConstructor = AbstractLazyTypeParameterDescriptor$1@72
    upperBounds = LinkedHashSet@160[1] { NullableType@161 }
}

LazyJavaTypeParameterResolver@162 {
    resolve(JavaTypeParameterImpl@163['T']) = LazyJavaTypeParameterDescriptor@21['T']
}

LazyJavaTypeParameterResolver@164 {
    resolve(JavaTypeParameterImpl@81['T']) = null
}

LazyJavaTypeParameterResolver@165 {
    resolve(JavaTypeParameterImpl@93['T']) = null
}

LazyJavaTypeParameterResolver@166 {
    resolve(JavaTypeParameterImpl@71['T']) = null
}

LazyJavaTypeParameterResolver@167 {
    resolve(JavaTypeParameterImpl@78['T']) = null
}

ResolutionTaskHolder@168 {
    <name not found> = ArrayList@169[1] { ResolutionCandidate@170 }
}

ResolutionTaskHolder@171 {
    <name not found> = ArrayList@172[1] { ResolutionCandidate@173 }
}

ResolutionTaskHolder@174 {
    <name not found> = ArrayList@175[1] { ResolutionCandidate@176 }
}

ResolutionTaskHolder@177 {
    <name not found> = ArrayList@178[1] { ResolutionCandidate@179 }
}

ResolutionTaskHolder@180 {
    <name not found> = ArrayList@181[1] { ResolutionCandidate@182 }
}

ResolutionTaskHolder@183 {
    <name not found> = ArrayList@184[1] { ResolutionCandidate@185 }
}

ResolutionTaskHolder@186 {
    <name not found> = ArrayList@187[1] { ResolutionCandidate@188 }
}

ResolutionTaskHolder@189 {
    <name not found> = ArrayList@190[1] { ResolutionCandidate@191 }
}

ResolutionTaskHolder@192 {
    <name not found> = ArrayList@193[1] { ResolutionCandidate@194 }
}

ResolutionTaskHolder@195 {
    <name not found> = ArrayList@196[1] { ResolutionCandidate@197 }
}

ResolutionTaskHolder@198 {
    <name not found> = ArrayList@199[1] { ResolutionCandidate@200 }
}

ResolutionTaskHolder@201 {
    <name not found> = ArrayList@202[1] { ResolutionCandidate@203 }
}

ResolutionTaskHolder@204 {
    <name not found> = ArrayList@205[1] { ResolutionCandidate@206 }
}

ResolutionTaskHolder@207 {
    <name not found> = ArrayList@208[1] { ResolutionCandidate@209 }
}

ResolutionTaskHolder@210 {
    <name not found> = ArrayList@211[1] { ResolutionCandidate@212 }
}

ResolutionTaskHolder@213 {
    <name not found> = ArrayList@214[1] { ResolutionCandidate@215 }
}

null {
    <name not found> = ArrayList@216[1] { ResolutionCandidate@206 }
    <name not found> = ArrayList@217[1] { ResolutionCandidate@215 }
    <name not found> = ArrayList@218[1] { ResolutionCandidate@185 }
    <name not found> = ArrayList@219[1] { ResolutionCandidate@170 }
    <name not found> = ArrayList@220[1] { ResolutionCandidate@173 }
    <name not found> = ArrayList@221[1] { ResolutionCandidate@191 }
    <name not found> = ArrayList@222[1] { ResolutionCandidate@194 }
    <name not found> = ArrayList@223[1] { ResolutionCandidate@209 }
    <name not found> = ArrayList@224[1] { ResolutionCandidate@182 }
    <name not found> = ArrayList@225[1] { ResolutionCandidate@176 }
    <name not found> = ArrayList@226[1] { ResolutionCandidate@179 }
    <name not found> = ArrayList@227[1] { ResolutionCandidate@200 }
    <name not found> = ArrayList@228[1] { ResolutionCandidate@188 }
    <name not found> = ArrayList@229[1] { ResolutionCandidate@203 }
    <name not found> = ArrayList@230[1] { ResolutionCandidate@212 }
    <name not found> = ArrayList@231[1] { ResolutionCandidate@197 }
}
