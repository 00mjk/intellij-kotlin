namespace lvalue_assignment

open class B() {
    var b: Int = 2
    val c: Int = 34
}

class C() : B() {
    var x = 4
    fun foo(c: C) {
        this.x = 34
        this.b = 123
        super.b = 23
        <!VAL_REASSIGNMENT!>this.c<!> = 34
        <!VAL_REASSIGNMENT!>super.c<!> = 3535

        <!VARIABLE_EXPECTED!>getInt()<!> = 12
    }

    fun bar(c: C) {
        <!VARIABLE_EXPECTED!>this<!> = c  //should be an error
    }
}

fun getInt() = 0

class D() {
    class B() {
        fun foo() {
            <!VARIABLE_EXPECTED!>this@D<!> = D()
        }
    }
}

fun cannotBe(var i: Int) {
    <!UNRESOLVED_REFERENCE!>z<!> = 30;
    <!VARIABLE_EXPECTED!>()<!> = ();

    (<!VARIABLE_EXPECTED!>i <!USELESS_CAST!>as<!> Int<!>) = 34
    (<!VARIABLE_EXPECTED!>i is Int<!>) = false
    <!VARIABLE_EXPECTED!>A()<!> = A()
    <!VARIABLE_EXPECTED!>5<!> = 34
}

fun canBe(var i: Int, val j: Int) {
    (i: Int) = 36
    (@label i) = 34

    (<!VAL_REASSIGNMENT!>j<!>: Int) = 36
    (@label <!VAL_REASSIGNMENT!>j<!>) = 34

    val a = A()
    (@ a.a) = 3894
}

class A() {
    var a: Int = 3
}
