// http://youtrack.jetbrains.net/issue/KT-424

class A {
    <!CONFLICTING_OVERLOADS!>fun a(a: Int): Int<!> = 0

    <!CONFLICTING_OVERLOADS!>fun a(a: Int)<!> {
    }

    <!CONFLICTING_OVERLOADS!>fun b()<!> {
    }

    <!CONFLICTING_OVERLOADS!>fun b()<!> {
    }
}

namespace deepSpace {
    <!CONFLICTING_OVERLOADS!>fun c(s: String)<!> {
    }

    <!CONFLICTING_OVERLOADS!>fun c(s: String)<!> {
    }

    class B {
        <!CONFLICTING_OVERLOADS!>fun d(s: String)<!> {
        }

        <!CONFLICTING_OVERLOADS!>fun d(s: String)<!> {
        }
    }
}


// check no error in overload in different namespaces

namespace ns1 {
    fun e() = 1
}

namespace ns2 {
    fun e() = 1
}

namespace ns3 {
    namespace ns1 {
        fun e() = 1
    }
}

// check same rules apply for ext functions

namespace extensionFunctions {
    <!CONFLICTING_OVERLOADS!>fun Int.qwe(a: Float)<!> = 1
    
    <!CONFLICTING_OVERLOADS!>fun Int.qwe(a: Float)<!> = 2
    
    fun Int.rty() = 3
    
    fun String.rty() = 4
}

// check no error when regular function and extension function have same name

namespace extensionAndRegular {
    fun who() = 1
    
    fun Int.who() = 1
}

// constructor vs. fun overload

namespace constructorVsFun {
    class <!CONFLICTING_OVERLOADS!>a()<!> { }

    <!CONFLICTING_OVERLOADS!>fun a()<!> = 1
    
    class Tram {
        <!CONFLICTING_OVERLOADS!>fun f()<!> { }
        
        class <!CONFLICTING_OVERLOADS!>f()<!> { }
    }
    
    class Yvayva {
        class object {
            <!CONFLICTING_OVERLOADS!>fun fghj()<!> { }
            
            class <!CONFLICTING_OVERLOADS!>fghj()<!> { }
        }
    }
    
    class Rtyu {
        fun ololo() { }
        
        class object {
            class ololo() { }
        }
    }
}

